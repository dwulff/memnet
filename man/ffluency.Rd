% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{ffluency}
\alias{ffluency}
\title{Fast verbal fluency generator}
\usage{
ffluency(adjlist, n, pjump, random)
}
\arguments{
\item{adjlist}{a list containing row indices for adjacent vertices as created
by \link{get_adjlist}.}

\item{n}{integer specifying the number of productions.}

\item{pjump}{numeric specifying the probability of a jump.}

\item{random}{bool controlling jump vertices.
For \code{random = TRUE} the process selects jump at random. For
\code{random = FALSE} the process always jumps back to the start vertex. The
start vertex is always selected at random.}
}
\value{
Integer vector containing the indices of the fluency productions.
  Indices refer to the row of the item in the original adjacency matrix. See
  \link{get_adjlist}.
}
\description{
Generates verbal fluency data using a switcher-random walk process.
}
\details{
Function produces verbal fluency data via a switcher random walk
process that traverses the network by selecting neighbors with
probability 1-\code{pjump} or jumps to a random place in the network
with probability \code{pjump}. How the random walk process enters
the network and how it jumps to is additionally controlled
by \code{random}. Neighbors are always selected uniformly.

In contrast to \link{fluency}, does not check at every step whether
the sampled neighbor is already in the list of productions. Instead
\code{ffluency} simply returns the list of unique productions. This means
that if repetitions occur \code{ffluency} will produce sequences of length
\code{min(n*3 - k, n)} where k is the number of repeptitions.
}
